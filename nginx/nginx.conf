server {
	listen 80:
	server_name api.114514.com; # 域名
	client_max_body_size 10m;
    location / {
        proxy_pass http://127.0.0.1:3000;  # 后端地址
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr; # 透传用户真实ip
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # 重写请求头，下同
        proxy_set_header X-Forwarded-Proto $scheme;
    }
	#处理认证端口3001
    location /api/auth/register  {
        return 307 http://127.0.0.1:3001/register ; # api register请求反代，由于nginx默认转发为get，所以使用return 307以避免POST变成GET
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /api/auth/login {
        return 307 http://127.0.0.1:3001/login;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
	#3002用户信息管理
    location /api/user/profile {
        proxy_pass http://127.0.0.1:3002/profile;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    location /api/user/profile {
        return 307 http://127.0.0.1:3002/profile;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
	dav_methods PUT DELETE; # 处理put请求
    }
    location /api/user/password {
        return 307 http://127.0.0.1:3002/password;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        dav_methods PUT DELETE; # 处理put请求
    }

    location /socket.io { # socket.io 配置
      proxy_pass http://127.0.0.1:9091;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header REMOTE-HOST $remote_addr;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_buffering off;
      proxy_http_version 1.1;
      add_header Cache-Control no-cache;
    }

    # 注意这个部分是使用 Certbot 生成的 SSL 配置，只需 sudo certbot --nginx 即可

    listen [::]:443 ssl ipv6only=on; # managed by Certbot
    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/next.blog.grtsinry43.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/next.blog.grtsinry43.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}


server {
    if ($host = next.blog.grtsinry43.com) {
        return 301 https://$host$request_uri;
    } # managed by Certbot



	listen 80 default_server;
	listen [::]:80 default_server;

	server_name next.blog.grtsinry43.com;
    return 404; # managed by Certbot


}
